"""
Django settings for stripe_subscription project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from dotenv import load_dotenv

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# static roots
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

STATIC_ROOT = os.path.join(PROJECT_ROOT, 'staticfiles')
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "stripe_subscription/static"),
]

env_path = os.path.join('.', '.env')
load_dotenv(dotenv_path=env_path)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'cqo41k0z)n*jn2m^ocrs$a5t@qdq#d2@0u6hho)k#$0bsx+o=&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'subscriptions.apps.SubscriptionsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'stripe_subscription.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'stripe_subscription', 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'stripe_subscription.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': os.environ['DATABASE_NAME'],
#         'HOST': os.environ['DATABASE_HOST'],
#         'PORT': os.environ['DATABASE_PORT'],
#         'USER': os.environ['DATABASE_USER'],
#         'PASSWORD': os.environ['DATABASE_PASSWORD'],
#         'OPTIONS': {
#             'sslmode': 'False'
#         }
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'


# STRIPE_PUBLISHABLE_KEY is a public key where request is send from the front end
# STRIPE_PUBLISHABLE_KEY = 'pk_test_51IL4TBL3KiU1mb7FIGFHrntUIM181kxiFb9kRLbZCBsFr1Cy61X8oCHDEAbS4CHsr62EfZaZFGklA06gD2HkZwZe00czYr9qx8'
STRIPE_PUBLISHABLE_KEY = os.environ['STRIPE_PUBLISHABLE_KEY']

# STRIPE_SECRET_KEY a secret key sent to stripe
# STRIPE_SECRET_KEY = 'sk_test_51IL4TBL3KiU1mb7FYjQjc0LsARkjB5duqnWbBcZ1YlpYmehVYWc15aiTmq79DhtKIVEvhkxpU29ZJ52BjxC5wck6006gRYkg9H'
STRIPE_SECRET_KEY = os.environ['STRIPE_SECRET_KEY']

# STRIPE_PRICE_ID product price id
# STRIPE_PRICE_ID = 'price_1IL4YPL3KiU1mb7FpHXvHbnf'
STRIPE_PRICE_ID = os.environ['STRIPE_PRICE_ID']

# STRIPE_ENDPOINT_SECRET webhook secret (genereted from machine)
# STRIPE_ENDPOINT_SECRET = 'whsec_TnRrOGpz9GKWWGUTrRCRC2frTzx5jOYJ'
STRIPE_ENDPOINT_SECRET = os.environ['STRIPE_ENDPOINT_SECRET']
